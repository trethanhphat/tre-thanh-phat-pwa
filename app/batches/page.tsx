// ‚úÖ File: app/batches/page.tsx
'use client';

import Link from 'next/link';
import { useEffect, useState } from 'react';
import { Batch } from '@/models/Batch';
import { getBatchList } from '@/controllers/batchController';

export default function BatchListPage() {
  const [batches, setBatches] = useState<Batch[]>([]);
  const [status, setStatus] = useState<string>('‚è≥ ƒêang t·∫£i d·ªØ li·ªáu...');
  const [loading, setLoading] = useState(true);

  async function loadData(forceUpdate = false) {
    setLoading(true);
    try {
      const { batches: batchData, status } = await getBatchList(forceUpdate);
      setBatches(batchData);
      setStatus(status);
    } catch (err: any) {
      // N·∫øu offline ho·∫∑c l·ªói kh√°c
      if (batches.length > 0) {
        setStatus('üìÇ Hi·ªÉn th·ªã d·ªØ li·ªáu tr√™n m√°y, ch·ªù c·∫≠p nh·∫≠t');
      } else {
        setStatus(err.message || '‚ö†Ô∏è Kh√¥ng th·ªÉ t·∫£i d·ªØ li·ªáu');
      }
    } finally {
      setLoading(false);
    }
  }

  useEffect(() => {
    loadData();
  }, []);

  return (
    <main className="p-4 space-y-4">
      <h1 className="text-2xl font-bold text-green-700">üì¶ Danh s√°ch L√¥/Batch</h1>

      <div className="flex items-center gap-3">
        {!loading && (
          <button
            onClick={() => loadData(true)}
            className="px-3 py-1 rounded bg-blue-600 text-white hover:bg-blue-700"
          >
            üîÑ C·∫≠p nh·∫≠t th·ªß c√¥ng
          </button>
        )}
        <span className="text-sm text-gray-500 italic">{status}</span>
      </div>

      {loading && <p>‚è≥ ƒêang t·∫£i d·ªØ li·ªáu...</p>}

      {!loading && batches.length > 0 && (
        <div className="overflow-x-auto">
          <table className="min-w-full border border-gray-300">
            <thead className="bg-gray-100">
              <tr style={{ background: 'var(--color-primary)' }}>
                <th
                  className="border p-2"
                  style={{ border: '1px solid var(--color-border)', padding: '8px' }}
                >
                  M√£ l√¥
                </th>
                <th
                  className="border p-2"
                  style={{ border: '1px solid var(--color-border)', padding: '8px' }}
                >
                  T√™n v√πng tr·ªìng
                </th>
                <th
                  className="border p-2"
                  style={{ border: '1px solid var(--color-border)', padding: '8px' }}
                >
                  Ng√†y tr·ªìng
                </th>
                <th
                  className="border p-2"
                  style={{ border: '1px solid var(--color-border)', padding: '8px' }}
                >
                  S·ªë l∆∞·ª£ng
                </th>
                <th
                  className="border p-2"
                  style={{ border: '1px solid var(--color-border)', padding: '8px' }}
                >
                  Di·ªán t√≠ch (ha)
                </th>
                <th
                  className="border p-2"
                  style={{ border: '1px solid var(--color-border)', padding: '8px' }}
                >
                  Kinh ƒë·ªô
                </th>
                <th
                  className="border p-2"
                  style={{ border: '1px solid var(--color-border)', padding: '8px' }}
                >
                  Vƒ© ƒë·ªô
                </th>
                <th
                  className="border p-2"
                  style={{ border: '1px solid var(--color-border)', padding: '8px' }}
                >
                  V·ªã tr√≠ tr√™n b·∫£n ƒë·ªì
                </th>
                <th
                  className="border p-2"
                  style={{ border: '1px solid var(--color-border)', padding: '8px' }}
                >
                  Ghi ch√∫
                </th>
              </tr>
            </thead>
            <tbody>
              {batches.map((b, index) => (
                <tr
                  key={b.batch_id}
                  className="hover:bg-gray-50"
                  style={{
                    backgroundColor:
                      index % 2 === 0 ? 'var(--color-background)' : 'var(--color-surface)',
                  }}
                >
                  <td
                    className="border p-2 text-blue-600 underline"
                    style={{ border: '1px solid var(--color-border)', padding: '0.5rem' }}
                    data-label="M√£ l√¥"
                  >
                    <Link href={`/batch/${b.batch_id}`}>{b.batch_id}</Link>
                  </td>
                  <td
                    className="border p-2"
                    style={{ border: '1px solid var(--color-border)', padding: '0.5rem' }}
                    data-label="T√™n v√πng tr·ªìng"
                  >
                    {b.region_name}
                  </td>
                  <td
                    className="border p-2"
                    style={{ border: '1px solid var(--color-border)', padding: '0.5rem' }}
                    data-label="Ng√†y tr·ªìng"
                  >
                    {b.planting_date}
                  </td>
                  <td
                    className="border p-2"
                    style={{ border: '1px solid var(--color-border)', padding: '0.5rem' }}
                    data-label="S·ªë l∆∞·ª£ng"
                  >
                    {b.quantity}
                  </td>
                  <td
                    className="border p-2"
                    style={{ border: '1px solid var(--color-border)', padding: '0.5rem' }}
                    data-label="Di·ªán t√≠ch (ha)"
                  >
                    {b.area || '‚Äî'}
                  </td>
                  <td
                    className="border p-2"
                    style={{ border: '1px solid var(--color-border)', padding: '0.5rem' }}
                    data-label="Kinh ƒë·ªô"
                  >
                    {b.batch_longitude || 'ƒêang c·∫≠p nh·∫≠t'}
                  </td>
                  <td
                    className="border p-2"
                    style={{ border: '1px solid var(--color-border)', padding: '0.5rem' }}
                    data-label="Vƒ© ƒë·ªô"
                  >
                    {b.batch_latitude || 'ƒêang c·∫≠p nh·∫≠t'}
                  </td>
                  <td
                    className="border p-2 text-blue-600 underline"
                    style={{ border: '1px solid var(--color-border)', padding: '0.5rem' }}
                    data-label="V·ªã tr√≠ tr√™n b·∫£n ƒë·ªì"
                  >
                    {b.batch_location ? (
                      <Link href={b.batch_location}>M·ªü b·∫£n ƒë·ªì</Link>
                    ) : (
                      <span className="text-gray-500">ƒêang c·∫≠p nh·∫≠t</span>
                    )}
                  </td>
                  <td
                    className="border p-2"
                    style={{ border: '1px solid var(--color-border)', padding: '0.5rem' }}
                    data-label="Ghi ch√∫"
                  >
                    {b.note || '‚Äî'}
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      )}

      {!loading && batches.length === 0 && (
        <p className="text-gray-500">‚ö†Ô∏è Kh√¥ng c√≥ d·ªØ li·ªáu l√¥ n√†o.</p>
      )}
    </main>
  );
}
